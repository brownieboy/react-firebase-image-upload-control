/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory(require("react"));
	else if(typeof define === 'function' && define.amd)
		define(["react"], factory);
	else if(typeof exports === 'object')
		exports["rfiu"] = factory(require("react"));
	else
		root["rfiu"] = factory(root["react"]);
})(global, (__WEBPACK_EXTERNAL_MODULE_react__) => {
return /******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./src/FirebaseUploader.tsx":
/*!**********************************!*\
  !*** ./src/FirebaseUploader.tsx ***!
  \**********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\n/* eslint-disable indent */\nconst react_1 = __importDefault(__webpack_require__(/*! react */ \"react\"));\nconst styles = {\n    imagePreview: {\n        maxHeight: 150,\n        maxWidth: 200\n    },\n    imagePreviewTitle: {},\n    progressControl: {\n        label: {\n            fontSize: 10\n        }\n    }\n};\nconst PlainProgressIndicator = ({ value, fileName }) => {\n    return (react_1.default.createElement(\"div\", { style: {\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            marginRight: 5\n        } },\n        react_1.default.createElement(\"div\", null,\n            value,\n            \"%\"),\n        react_1.default.createElement(\"div\", { style: styles.progressControl.label }, fileName)));\n};\nconst PlainCheckbox = (props) => react_1.default.createElement(\"input\", Object.assign({ type: \"checkbox\" }, props));\nconst PlainButton = (_a) => {\n    var { children } = _a, props = __rest(_a, [\"children\"]);\n    return react_1.default.createElement(\"button\", Object.assign({}, props), children);\n};\nconst PassedPropProgressIndicator = ({ component: Component, value, componentWrapperStyles, fileName }) => {\n    if (componentWrapperStyles) {\n        return (react_1.default.createElement(\"div\", { style: {\n                display: \"flex\",\n                alignItems: \"center\",\n                flexDirection: \"column\",\n                marginRight: 10\n            } },\n            react_1.default.createElement(\"div\", { style: componentWrapperStyles },\n                react_1.default.createElement(Component, { value: value })),\n            react_1.default.createElement(\"div\", { style: styles.progressControl.label }, fileName)));\n    }\n    return (react_1.default.createElement(Component, { value: value }));\n};\nconst FirebaseUploadImage = () => {\n    // const [testVal] = useState(\"hey 4\");\n    const testVal = 4;\n    console.log(\"TCL ~ file: FirebaseUploader.tsx ~ line 173 ~ FirebaseUploadImage ~ testVal\", testVal);\n    return react_1.default.createElement(\"div\", null, \"Hello FirebaseUploadImage\");\n};\n// const FirebaseUploadImage = ({\n//   firebaseApp,\n//   storageFolder = \"rfiu\",\n//   disabled = false,\n//   multiple = false,\n//   options = {\n//     styles: {\n//       imgPreview: {},\n//       imgPreviewLabel: {},\n//       progressControlWrapper: {}\n//     }\n//   },\n//   progressControl,\n//   checkboxControl,\n//   buttonControl,\n//   uploadButtonIcon,\n//   removeButtonIcon,\n//   uploadStartCallback,\n//   uploadCompleteCallback\n// }: FirebaseUploadImageProps) => {\n//   const [filesToStore, setFilesToStore] = useState<FileWithPreview[]>([]);\n//   const [filesToRemove, setFilesToRemove] = useState<string[]>([]);\n//   const [uploadState, setUploadState] = useState<FileUploadState>({});\n//   const [uploadButtonClicked, setUploadButtonClicked] = useState(false);\n//   const UploadButtonIcon = uploadButtonIcon;\n//   const RemoveButtonIcon = removeButtonIcon;\n//   const ProgressControl = progressControl\n//     ? PassedPropProgressIndicator\n//     : PlainProgressIndicator;\n//   const CheckboxControl = checkboxControl || PlainCheckbox;\n//   const ButtonControl = buttonControl || PlainButton;\n//   const storage = getStorage(firebaseApp);\n//   const handleImageChange = (acceptedFilesArray: FileWithPreview[]) => {\n//     if (multiple) {\n//       const uniqueFilesArray = _uniqBy(\n//         e => e.name,\n//         [...filesToStore, ...acceptedFilesArray]\n//       ).map(file =>\n//         // Spread operator didn't work here.  Has to be Object.assign()\n//         Object.assign(file, {\n//           preview: URL.createObjectURL(file)\n//         })\n//       );\n//       setFilesToStore(uniqueFilesArray);\n//     } else {\n//       setFilesToStore(\n//         acceptedFilesArray.map(file =>\n//           Object.assign(file, {\n//             preview: URL.createObjectURL(file)\n//           })\n//         )\n//       );\n//     }\n//     setFilesToRemove([]); // Important to clear this if we have new files\n//   };\n//   const handleProgress = (percent: number, fileName: string) => {\n//     setUploadState((prevState: any) => {\n//       return {\n//         ...prevState,\n//         [fileName]: percent\n//       };\n//     });\n//   };\n//   const startUpload = async () => {\n//     if (uploadStartCallback) {\n//       uploadStartCallback(filesToStore);\n//     }\n//     setUploadButtonClicked(true);\n//     filesToStore.forEach(file => {\n//       const storageRef = fbRef(storage, `${storageFolder}/${file.name}`);\n//       const uploadTask = uploadBytesResumable(storageRef, file);\n//       uploadTask.on(\n//         \"state_changed\",\n//         snapshot => {\n//           const progress = Math.round(\n//             (snapshot.bytesTransferred / snapshot.totalBytes) * 100\n//           );\n//           const fileName = snapshot.ref.name;\n//           handleProgress(progress, fileName);\n//         },\n//         error => {\n//           alert(error);\n//         },\n//         async () => {\n//           const downloadUrl = await getDownloadURL(uploadTask.snapshot.ref);\n//           const fileName = uploadTask?.snapshot?.ref?.name;\n//           handleUploadSuccess(fileName, downloadUrl);\n//         }\n//       );\n//     });\n//   };\n//   const handleUploadSuccess = async (fileName: string, downloadUrl: string) => {\n//     setFilesToStore(prevState => {\n//       const currentFileIndex = prevState.findIndex(\n//         member => member.name === fileName\n//       );\n//       const newFileInfo = Object.assign(prevState[currentFileIndex]);\n//       newFileInfo.downloadUrl = downloadUrl;\n//       const newState = [\n//         ...prevState.slice(0, currentFileIndex),\n//         newFileInfo,\n//         ...prevState.slice(currentFileIndex + 1)\n//       ];\n//       if (uploadCompleteCallback) {\n//         const filesWithDownloadUrls = newState.filter(\n//           member => member.downloadUrl\n//         );\n//         if (newState.length === filesWithDownloadUrls.length) {\n//           uploadCompleteCallback({files: newState});\n//         }\n//       }\n//       return newState;\n//     });\n//   };\n//   // event prop defined as any because it might be an @mui checkbox or any other\n//   // kind of checkbox, not just an HTML one.\n//   const handleFileRemovalCheck = (event: any) => {\n//     if (event.target.checked) {\n//       setFilesToRemove([...filesToRemove, event?.target?.value]);\n//     } else {\n//       setFilesToRemove(\n//         filesToRemove.filter(member => member !== event.target.value)\n//       );\n//     }\n//   };\n//   const handleRemoveFiles = () => {\n//     setFilesToStore(\n//       filesToStore.filter(member => !filesToRemove.includes(member.name))\n//     );\n//     setFilesToRemove([]); // Important to clear this after\n//   };\n//   const imgPreviewStyles = {\n//     ...styles.imagePreview,\n//     ...options?.styles?.imgPreview\n//   };\n//   const imgPreviewTitleStyles = {\n//     ...styles.imagePreviewTitle,\n//     ...options?.styles?.imgPreviewTitle\n//   };\n//   return (\n//     <>\n//       <ImageDrop onDrop={handleImageChange} multiple={multiple} />\n//       <div\n//         style={{\n//           display: \"flex\",\n//           flexWrap: \"wrap\"\n//         }}>\n//         {filesToStore.length > 0\n//           ? filesToStore.map(file => (\n//               <div\n//                 key={file.name}\n//                 style={{\n//                   display: \"flex\",\n//                   flexDirection: \"column\",\n//                   justifyContent: \"space-between\",\n//                   marginBottom: 10,\n//                   marginRight: 10\n//                 }}>\n//                 <img\n//                   src={file.preview}\n//                   title={file.name}\n//                   alt={file.name}\n//                   style={imgPreviewStyles}\n//                 />\n//                 <div style={imgPreviewTitleStyles}>\n//                   <label\n//                     htmlFor={file.name}\n//                     style={options?.styles?.imgPreviewLabel}>\n//                     {`${file.name} (${prettyBytes(file.size)})`}\n//                   </label>\n//                   <CheckboxControl\n//                     checked={filesToRemove.includes(file.name)}\n//                     onChange={handleFileRemovalCheck}\n//                     id={file.name}\n//                     value={file.name}\n//                   />\n//                 </div>\n//               </div>\n//             ))\n//           : null}\n//       </div>\n//       <div style={{display: \"flex\", alignItems: \"center\"}}>\n//         <ButtonControl\n//           variant=\"contained\"\n//           onClick={handleRemoveFiles}\n//           style={{textTransform: \"none\", marginTop: 10, marginRight: 10}}\n//           disabled={filesToRemove.length === 0}>\n//           {/* <DeleteIcon style={{ marginRight: 10 }} /> */}\n//           {removeButtonIcon ? (\n//             <RemoveButtonIcon style={{marginRight: 10}} />\n//           ) : null}\n//           Remove checked files\n//         </ButtonControl>\n//         <ButtonControl\n//           color=\"primary\"\n//           variant=\"contained\"\n//           onClick={startUpload}\n//           style={{textTransform: \"none\", marginTop: 10, marginRight: 10}}\n//           disabled={disabled || filesToStore.length === 0}>\n//           {/* <CloudUploadIcon style={{ marginRight: 10 }} /> */}\n//           {uploadButtonIcon ? (\n//             <UploadButtonIcon style={{marginRight: 10}} />\n//           ) : null}\n//           {filesToStore.length > 1 ? \"Upload all\" : \"Upload\"}\n//         </ButtonControl>\n//       </div>\n//       <div style={{display: \"flex\", alignItems: \"center\", marginTop: 10}}>\n//         {/* {uploadButtonClicked && ( */}\n//         {uploadButtonClicked &&\n//           filesToStore.map(file => {\n//             return (\n//               <ProgressControl\n//                 value={uploadState[file.name] || 0}\n//                 key={file.name}\n//                 component={progressControl}\n//                 componentWrapperStyles={options?.styles?.progressControlWrapper}\n//                 fileName={file.name}\n//               />\n//             );\n//           })}\n//       </div>\n//     </>\n//   );\n// };\nexports[\"default\"] = FirebaseUploadImage;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/FirebaseUploader.tsx\n");

/***/ }),

/***/ "./src/index.tsx":
/*!***********************!*\
  !*** ./src/index.tsx ***!
  \***********************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst react_1 = __importDefault(__webpack_require__(/*! react */ \"react\"));\nconst FirebaseUploader_1 = __importDefault(__webpack_require__(/*! ./FirebaseUploader */ \"./src/FirebaseUploader.tsx\"));\nconst App = (props) => (react_1.default.createElement(FirebaseUploader_1.default, Object.assign({}, props)));\nexports[\"default\"] = App;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvaW5kZXgudHN4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0NBQWdDLG1CQUFPLENBQUMsb0JBQU87QUFDL0MsMkNBQTJDLG1CQUFPLENBQUMsc0RBQW9CO0FBQ3ZFLGtHQUFrRztBQUNsRyxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL3JmaXUvLi9zcmMvaW5kZXgudHN4P2VjMjYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5jb25zdCByZWFjdF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCJyZWFjdFwiKSk7XG5jb25zdCBGaXJlYmFzZVVwbG9hZGVyXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vRmlyZWJhc2VVcGxvYWRlclwiKSk7XG5jb25zdCBBcHAgPSAocHJvcHMpID0+IChyZWFjdF8xLmRlZmF1bHQuY3JlYXRlRWxlbWVudChGaXJlYmFzZVVwbG9hZGVyXzEuZGVmYXVsdCwgT2JqZWN0LmFzc2lnbih7fSwgcHJvcHMpKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBBcHA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/index.tsx\n");

/***/ }),

/***/ "react":
/*!************************!*\
  !*** external "react" ***!
  \************************/
/***/ ((module) => {

module.exports = __WEBPACK_EXTERNAL_MODULE_react__;

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.tsx");
/******/ 	
/******/ 	return __webpack_exports__;
/******/ })()
;
});